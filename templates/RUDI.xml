<templateSet group="RUDI">
  <template name="subject" value="private readonly $subjectName$ = new Subject&lt;$type$&gt;();&#10;readonly $subjectName$$: Observable&lt;$type$&gt; = this.$subjectName$.asObservable();" description="Create a private subject and the corresponding public observable" toReformat="true" toShortenFQNames="true">
    <variable name="subjectName" expression="jsSuggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="string" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="logvar" value="console.log('$var$', $var$);" description="Log variable to the console" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="extendWithMockito" value="@org.junit.jupiter.api.extension.ExtendWith(org.mockito.junit.jupiter.MockitoExtension.class)" description="Add @ExtendWith annotation for Mockito Unit Test" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="assertThat" value="org.assertj.core.api.Assertions.assertThat($END$)" description="AssertJ assertThat" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="when" value="org.mockito.Mockito.when($END$)" description="Mockito when" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="defaultvalue" value="[ -z &quot;$$$var$&quot; ] &amp;&amp; $var$=&quot;$value$&quot;" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>